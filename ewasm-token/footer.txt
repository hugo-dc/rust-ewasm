    deadbeef00000000000000000000000000000000:
      balance: '100000000000'
      nonce: ''
      storage: {}
      code: |
        (module
          (import "ethereum" "storageStore" (func $storageStore (param i32 i32)))
          (import "ethereum" "call" (func $call (param i64 i32 i32 i32 i32) (result i32)))
          (import "ethereum" "getReturnDataSize" (func $getReturnDataSize (result i32)))
          (import "ethereum" "returnDataCopy" (func $returnDataCopy (param i32 i32 i32)))
          (import "debug"    "printMemHex" (func $printMemHex (param i32 i32)))
          (import "debug"    "print32" (func $print32 (param i32)))
          (memory 1)

          ;; first command: query balance of 0xdeadbeef00000000000000000000000000000000
          (data (i32.const 0) "\99\93\02\1a\de\ad\be\ef\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")

          ;; second command: Transfer 500000 to 0xe929CF2544363bdCEE4a976515d5F97758Ef476c
          (data (i32.const 32) "\bd\9f\35\5d\6c\47\ef\58\77\f9\d5\15\65\97\4a\ee\dc\3b\36\44\25\cf\29\e9\20\a1\07\00\00\00\00\00")

          ;; third command: Query balance of 0xdeadbeef00000000000000000000000000000000
          (data (i32.const 64) "\1a\02\93\99\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\ef\be\ad\de")
          
          ;; fourth command: Query balance of 0xe929CF2544363bdCEE4a976515d5F97758Ef476c
          (data (i32.const 96) "\1a\02\93\99\6c\47\ef\58\77\f9\d5\15\65\97\4a\ee\dc\3b\36\44\25\cf\29\e9")

          ;; contract address
          (data (i32.const 128) "\a0\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")

          ;; storage keys
          (data (i32.const 160) "\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00") ;; 01
          (data (i32.const 192) "\02\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00") ;; 02
          (data (i32.const 224) "\03\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00") ;; 03
          (data (i32.const 256) "\04\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00") ;; 04
          (data (i32.const 512) "\05\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00") ;; 05
          (data (i32.const 544) "\06\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00") ;; 06
          (data (i32.const 576) "\07\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00") ;; 07
          (data (i32.const 608) "\08\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00") ;; 08

          (export "memory" (memory 0))
          (export "main" (func $main))

          (func $main
            ;; locals
            (local $memOffset i32)
            (local $ptrAddress i32)
            (local $ptrValueZero i32)

            (local $ptrCommand1 i32)
            (local $ptrCommand2 i32)
            (local $ptrCommand3 i32)
            (local $ptrCommand4 i32)

            (local $lenCommand1 i32)
            (local $lenCommand2 i32)
            (local $lenCommand3 i32)
            (local $lenCommand4 i32)

            (local $ptrCallResult1 i32)
            (local $ptrCallResult2 i32)
            (local $ptrCallResult3 i32)
            (local $ptrCallResult4 i32)

            (local $ptrStorageKey1 i32)
            (local $ptrStorageKey2 i32)
            (local $ptrStorageKey3 i32)
            (local $ptrStorageKey4 i32)
            (local $ptrStorageKey5 i32)
            (local $ptrStorageKey6 i32)
            (local $ptrStorageKey7 i32)
            (local $ptrStorageKey8 i32)

            (local $ptrReturnData1 i32)
            (local $ptrReturnData2 i32)
            (local $ptrReturnData3 i32)
            (local $ptrReturnData4 i32)

            ;; init data pointers
            (set_local $ptrCommand1 (i32.const 0))
            (set_local $ptrCommand2 (i32.const 32))
            (set_local $ptrCommand3 (i32.const 64))
            (set_local $ptrCommand4 (i32.const 96))
            (set_local $ptrAddress (i32.const 128))

            (set_local $lenCommand1 (i32.const 24))
            (set_local $lenCommand2 (i32.const 32))
            (set_local $lenCommand3 (i32.const 24))
            (set_local $lenCommand4 (i32.const 24))

            ;; memory layout and pointers
            (set_local $memOffset      (i32.const 160))
            (set_local $ptrStorageKey1 (i32.add (get_local $memOffset) (i32.mul (i32.const 32) (i32.const 0)))) ;; 160
            (set_local $ptrStorageKey2 (i32.add (get_local $memOffset) (i32.mul (i32.const 32) (i32.const 1)))) ;; 192
            (set_local $ptrStorageKey3 (i32.add (get_local $memOffset) (i32.mul (i32.const 32) (i32.const 2)))) ;; 224
            (set_local $ptrStorageKey4 (i32.add (get_local $memOffset) (i32.mul (i32.const 32) (i32.const 3)))) ;; 256
            (set_local $ptrValueZero   (i32.add (get_local $memOffset) (i32.mul (i32.const 32) (i32.const 4)))) ;; 288
            (set_local $ptrReturnData1 (i32.add (get_local $memOffset) (i32.mul (i32.const 32) (i32.const 5)))) ;; 320
            (set_local $ptrReturnData2 (i32.add (get_local $memOffset) (i32.mul (i32.const 32) (i32.const 6)))) ;; 352
            (set_local $ptrCallResult1 (i32.add (get_local $memOffset) (i32.mul (i32.const 32) (i32.const 7)))) ;; 384
            (set_local $ptrCallResult2 (i32.add (get_local $memOffset) (i32.mul (i32.const 32) (i32.const 8)))) ;; 416
            (set_local $ptrCallResult3 (i32.add (get_local $memOffset) (i32.mul (i32.const 32) (i32.const 9)))) ;; 448
            (set_local $ptrCallResult4 (i32.add (get_local $memOffset) (i32.mul (i32.const 32) (i32.const 10)))) ;; 480
            (set_local $ptrStorageKey5 (i32.add (get_local $memOffset) (i32.mul (i32.const 32) (i32.const 11)))) ;; 512
            (set_local $ptrStorageKey6 (i32.add (get_local $memOffset) (i32.mul (i32.const 32) (i32.const 12)))) ;; 544
            (set_local $ptrStorageKey7 (i32.add (get_local $memOffset) (i32.mul (i32.const 32) (i32.const 13)))) ;; 576
            (set_local $ptrStorageKey8 (i32.add (get_local $memOffset) (i32.mul (i32.const 32) (i32.const 14)))) ;; 608
            (set_local $ptrReturnData3 (i32.add (get_local $memOffset) (i32.mul (i32.const 32) (i32.const 15)))) ;; 640
            (set_local $ptrReturnData4 (i32.add (get_local $memOffset) (i32.mul (i32.const 32) (i32.const 16)))) ;; 672

            ;; first command: Query balance of 0xdeadbeef00000000000000000000000000000000
            ;; and save result
            (i32.store
              (get_local $ptrCallResult1)
              (call $call
                ;; gas
                (i64.const 100000)
                ;; address offset
                (get_local $ptrAddress)
                ;; value offset
                (get_local $ptrValueZero)
                ;; data offset
                (get_local $ptrCommand1)
                ;; data length
                (get_local $lenCommand1)
              )
            )

            ;; store it
            (call $storageStore (get_local $ptrStorageKey1) (get_local $ptrCallResult1))

            ;; read return val
            (call $returnDataCopy
              ;; resultOffset
              (get_local $ptrReturnData1)
              ;; dataOffset
              (i32.const 0)
              ;; length
              (call $getReturnDataSize)
            )

            (call $printMemHex (get_local $ptrReturnData1) (i32.const 32))
            ;; store it
            (call $storageStore (get_local $ptrStorageKey2) (get_local $ptrReturnData1))
          )
        )
  expect:
    - indexes:
        data: !!int -1
        gas: !!int -1
        value: !!int -1
      network:
        - ALL
      result:
        a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
          balance: '99999968084'
        deadbeef00000000000000000000000000000000:
          storage: {
            # First call should be success
            # $memPointerStorageKey1 = 1
            #1: 0,
            # first return data: expect to get balance 1000000 that we set above in pre
            #2: 1000000,
            # Second call should be success
            #3: 0,
            # No output expected from second call
            #4: '',
            # Third call should be success
            #5: 0,
            # Third call should return new balance
            #6: 500000,
            # Fourth call should be success
            #7: 0,
            # Fourth call should return new balance
            #8: 500000,
          }
        a000000000000000000000000000000000000000:
          storage: {
            # Token balances
            0xdeadbeef00000000000000000000000000000000: 1000000,
            #0xe929cf2544363bdcee4a976515d5f97758ef476c: 500000
          }
  transaction:
    data:
    - '0x'
    gasLimit:
    - '0x6acfc0'
    gasPrice: '0x01'
    nonce: '0x04'
    secretKey: "45a915e4d060149eb4365960e6a7a45f334393093061116b197e3240065ff2d8"
    to: 'deadbeef00000000000000000000000000000000'
    value:
    - '0'
